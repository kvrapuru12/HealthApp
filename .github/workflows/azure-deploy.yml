name: Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: healthapp-backend
  AZURE_RESOURCE_GROUP: healthapp-rg
  KEY_VAULT_NAME: healthapp-kv
  MYSQL_SERVER: healthapp-mysql

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: mvn clean compile test
    
    - name: Run tests
      run: mvn test
    
    - name: Build JAR
      run: mvn clean package -DskipTests

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn clean package -DskipTests
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Create App Service (if not exists)
      run: |
        if ! az webapp show --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} &> /dev/null; then
          echo "Creating App Service..."
          az webapp create \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --plan healthapp-plan \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --runtime "JAVA:17-java17"
        else
          echo "App Service already exists"
        fi
    
    - name: Configure App Service Identity
      run: |
        az webapp identity assign \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
        
        PRINCIPAL_ID=$(az webapp identity show \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --query principalId -o tsv)
        
        az keyvault set-policy \
          --name ${{ env.KEY_VAULT_NAME }} \
          --object-id $PRINCIPAL_ID \
          --secret-permissions get list
    
    - name: Configure Environment Variables
      run: |
        az webapp config appsettings set \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --settings \
            DB_URL="jdbc:mysql://${{ env.MYSQL_SERVER }}.mysql.database.azure.com:3306/healthapp?useSSL=true&requireSSL=false&serverTimezone=UTC" \
            DB_USERNAME="@Microsoft.KeyVault(SecretUri=https://${{ env.KEY_VAULT_NAME }}.vault.azure.net/secrets/DB-USERNAME/)" \
            DB_PASSWORD="@Microsoft.KeyVault(SecretUri=https://${{ env.KEY_VAULT_NAME }}.vault.azure.net/secrets/DB-PASSWORD/)" \
            JWT_SECRET="@Microsoft.KeyVault(SecretUri=https://${{ env.KEY_VAULT_NAME }}.vault.azure.net/secrets/JWT-SECRET/)" \
            JWT_EXPIRATION="86400000" \
            SPRING_PROFILES_ACTIVE="azure"
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ./target/*.jar
        startup-command: 'java -jar target/healthapp-backend-1.0.0.jar'
    
    - name: Wait for deployment
      run: |
        echo "Waiting for deployment to complete..."
        sleep 60
    
    - name: Test deployment
      run: |
        echo "Testing deployment..."
        curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/actuator/health || exit 1
        echo "âœ… Deployment successful!"
    
    - name: Azure logout
      run: |
        az logout 